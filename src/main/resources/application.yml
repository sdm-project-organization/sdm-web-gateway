

server:
  port: 5555

signing:
  key: "345345fsdgsf5345"

logging:
  level:
    com.netflix: WARN
    org.springframework.web: DEBUG
    com.mo: DEBUG

env:
  host:
    local: localhost
    dev: dev.avocadostudio.xyz
  db:
    local:
      port: 3306
      schema: GUARD
    dev:
      port: 3306
      schema: GUARD

---

# ================ DEFAULT ================

spring:
  profiles: default
  application:
    name: gateway

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  instance:
    hostname: ${env.host.local}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/

# Euraka 이용하는 동적 매핑
zuul:
#  ignored-service: 'gateway' # 자동경로매핑 제외
#  ignored-services: 'gateway' # 자동경로매핑 제외
  ignored-services: '*' # 자동경로매핑 모두제외 (유레카기반의경로 모두제외)
  prefix: /api
  routes:
    dict: /dict/**
    guard: /guard/**
    auth: /auth/**

#zuul:
#  routes:
#    # 주울은 키 이름으로 서비스를 식별
#    licensestatic:
#      # 라이선싱 서비스에 대한 정적 경로
#      path: /licensestatic/**
#      # 유레카를 통하지 않고 주울이 직접 호출할 라이선싱 서비스의 정적 인스턴스를 설정
#      url: http://licenseservice-static:8081
#ribbon:
#  eureka:
#    # 리본에서 유레카 지원을 끈다
#    enabled: false
#  licensestatic:
#    ribbon:
#      # 요청을 라우팅하는데 사용된 서버 목록
#      listOfServers: http://licenseservice-static1:8801, http://licenseservice-static2:8802


---

# ================ DEV ================

spring:
  profiles: dev
  application:
    name: gateway

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  instance:
    hostname: dev.avocadostudio.xyz
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/

# Euraka 이용하는 동적 매핑
zuul:
  #  ignored-service: 'gateway' # 자동경로매핑 제외
  #  ignored-services: 'gateway' # 자동경로매핑 제외
  ignored-services: '*' # 자동경로매핑 모두제외 (유레카기반의경로 모두제외)
  prefix: /api
  routes:
    dict: /dict/**
    guard: /guard/**
    auth: /auth/**
